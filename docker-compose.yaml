version: '3.9'

services:
  tomato-proxy:
    image: traefik:3.0
    container_name: tomato-proxy
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --log.level=DEBUG
      - --entrypoints.web.address=:80
      - --providers.docker.exposedbydefault=false
    ports:
      - "8080:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - tomato

  tomato-api-service:
    build:
      dockerfile: Dockerfile
      context: .
      target: air
    container_name: tomato-api-service
    command: [ "-c", "air-api-service.toml" ]
    volumes:
      - ./:/go/src/app
      - $GOPATH/pkg:/go/pkg:ro
    ports:
      - "40000:40000"
      - "8082:80"
    networks:
      - tomato
    labels:
      - traefik.enable=true
      - traefik.http.routers.tomato.rule=Host(`tomato-api.local`)
      - traefik.http.routers.tomato.entrypoints=web
      - traefik.http.routers.tomato.service=tomato-api-service
      - traefik.http.services.tomato-api-service.loadbalancer.server.port=80
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://localhost:12201'
        tag: tomato-api-service

  tomato-postgres:
    image: postgres:15.5
    container_name: tomato-postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: dev
    ports:
      - "5432:5432"
    networks:
      - tomato
    volumes:
      - db_data:/var/lib/postgresql/data
    logging:
      driver: 'gelf'
      options:
        gelf-address: 'udp://localhost:12201'
        tag: tomato-postgres

  tomato-migrate:
    build:
      dockerfile: Dockerfile
      context: .
      target: golang
    container_name: tomato-migrate
    command: go run main.go migrate
    volumes:
      - ./:/go/src/app:ro
      - $GOPATH/pkg:/go/pkg:ro
    networks:
      - tomato
    depends_on:
      - tomato-postgres

networks:
  tomato:
    name: tomato

volumes:
  db_data:
